#!/bin/sh

usage_exit() {
    echo "Usage: $0 [-u] [-c]" 1>&2
    echo "  -u: Update packages"
    echo "  -c: Clean build caches"
    exit 1
}

abort() {
    cd $CURRENT_DIR
    echo "Bootstrap aborted."
    exit 1
}

CURRENT_DIR=`pwd`
SCRIPT_DIR=`dirname $0`

UPDATE=false
CLEAN=false

while getopts cuhr OPT
do
    case $OPT in
        u) UPDATE=true
            ;;
        c) CLEAN=true
            ;;
        h) usage_exit
            ;;
        \?) usage_exit
            ;;
    esac
done

INSTALL_BUNDLER=false
INSTALL_PODS=false
INSTALL_CARTHAGE=false

echo "Bootstrap build environment"

cd $SCRIPT_DIR

echo "Check depended tools."

echo "Checks RubyGems Bundler"
if [ -e "Gemfile" ] ; then
    echo "Gemfile found. Checks bundle installed."
    if !(type "bundle" > /dev/null 2>&1) ; then
        echo "Error: RubyGems Bundler is not installed."
        abort
    fi
    INSTALL_BUNDLER=true
else
    echo "Gemfile not found. Skip to install Bundle packages."
fi

echo "Checks CocoaPods"
if [ -e "Podfile" ] ; then
    echo "Podfile found. Checks CocoaPods defined in Bundler."
    grep cocoapods Gemfile
        if [ $? -ne 0 ] ; then
            echo "Error: CocoaPods is not defined in Gemfile."
            abort
        else
            echo "CocoaPods is defined in Gemfile."
        fi
    
    INSTALL_PODS=true
else
    echo "Podfile not found. Skip to install CocoaPods packages."
fi

echo "Checks Carthage"
if [ -e "Cartfile" ] ; then
    echo "Cartfile found. Checks Carthage installed."
    if !(type "carthage" > /dev/null 2>&1) ; then
        echo "Error: Carthage is not installed."
        abort
    fi
    INSTALL_CARTHAGE=true
else
    echo "Carthage not found. Skip to install Carthage packages."
fi

echo "Check environment is completed."

if $CLEAN ; then
    echo "Cleans caches."
    if $INSTALL_BUNDLER ; then
        echo "Removing vendor/bundle"
        rm -rf vendor/bundle
    fi
    if $INSTALL_PODS ; then
        echo "Removing Pods"
        rm -rf Pods
    fi
    if $INSTALL_CARTHAGE ; then
        echo "Removing Carthage"
        rm -rf Carthage
    fi
    echo "Clean caches completed."
fi

echo "Begins installing packages."

if $INSTALL_BUNDLER ; then
    echo "Installing RubyGems Bundler packages"
    bundle install --path=vendor/bundle
    if $UPDATE ; then
        echo "Update RubyGems Bundler packages"
        bundle update
    fi
fi

if $INSTALL_PODS ; then
    if $UPDATE ; then
        echo "Installs CocoaPods packages (Update mode)"
        bundle exec pod repo update
        bundle exec pod update
    else
        echo "Installs CocoaPods packages"
        bundle exec pod repo update
        bundle exec pod install
    fi
fi

if $INSTALL_CARTHAGE ; then
    if $UPDATE ; then
        echo "Installs Carthage packages (Update mode)"
        ./carthage.sh update --cache-builds --platform ios
    else
        echo "Installs Carthage packages"
        ./carthage.sh bootstrap --cache-builds --platform ios
    fi
fi

echo "Bootstrap finished"
cd $CURRENT_DIR

